apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: uptime-kuma
      app.kubernetes.io/name: uptime-kuma
  serviceName: uptime-kuma
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: uptime-kuma
        app.kubernetes.io/name: uptime-kuma
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      automountServiceAccountToken: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
      containers:
      - name: uptime-kuma
        image: 'quay.io/k3rnel-pan1c/uptime-kuma:latest'
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop: ["ALL"]
        resources:
          requests:
            cpu: 50m
            memory: 120Mi
          limits:
            cpu: 150m
            memory: 150Mi        
        env:
        - name: UPTIME_KUMA_PORT
          value: '3001'
        - name: PORT
          value: '3001'
        livenessProbe:
          exec:
            command:
            - extra/healthcheck
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/data
          name: uptime-storage
      - name: uptime-kuma-ts
        image: "ghcr.io/tailscale/tailscale:latest"
        imagePullPolicy: Always        
        env:
        - name: TS_HOSTNAME
          value: "uptime-kuma"
        - name: TS_KUBE_SECRET
          value: ""
        - name: KUBERNETES_SERVICE_HOST
          value: ""
        - name: TS_USERSPACE
          value: "false"
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: ts-authkey
              key: ts-authkey 
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
      securityContext:
        fsGroup: 2000
      terminationGracePeriodSeconds: 30
      volumes:
      - name: uptime-storage
        persistentVolumeClaim:
          claimName: uptime-kuma-pvc
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate