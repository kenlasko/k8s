# New method

# ---
# apiVersion: cilium.io/v2alpha1
# kind: CiliumBGPClusterConfig
# metadata:
#   name: cilium-bgp
# spec:
#   nodeSelector:
#     matchLabels:
#       kubernetes.io/os: linux
#   bgpInstances:
#   - name: "instance-65000"
#     localASN: 65000
#     peers:
#     - name: "peer-65000"
#       peerASN: 64512
#       peerAddress: 192.168.1.1
#       peerConfigRef:
#         name: "cilium-peer"

# ---
# apiVersion: cilium.io/v2alpha1
# kind: CiliumBGPPeerConfig
# metadata:
#   name: cilium-peer
# spec:
#   timers:
#     holdTimeSeconds: 15
#     keepAliveTimeSeconds: 3
# #  authSecretRef: bgp-auth-secret
# #  ebgpMultihop: 4
#   gracefulRestart:
#     enabled: true
#     restartTimeSeconds: 15
#   families:
#   - afi: ipv4
#     safi: unicast
#     advertisements:
#       matchLabels:
#         advertise: "bgp"

# ---
# apiVersion: cilium.io/v2alpha1
# kind: CiliumBGPAdvertisement
# metadata:
#   name: bgp-advertisements
#   labels:
#     advertise: bgp
# spec:
#   advertisements:
#   - advertisementType: "PodCIDR"
#     # selector:
#     #   matchLabels:
#     #     pool: "blue"
#     attributes:
#       communities:
#         standard: [ "65000:99" ]
#       localPreference: 99
#   - advertisementType: "Service"
#     service:
#       addresses:
#       - ExternalIP
#     selector:
#       matchLabels:
#         pool: "blue"

# Old method
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
 name: 01-bgp-peering-policy
spec:
 nodeSelector:
   matchLabels:
     bgp-policy: a
 virtualRouters:
 - localASN: 65000
   exportPodCIDR: true
   neighbors:
    - peerAddress: '192.168.1.1/32'
      peerASN: 64512
   serviceSelector:
     matchExpressions:
       - {key: somekey, operator: NotIn, values: ['never-used-value']}

---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumLoadBalancerIPPool
metadata:
  name: "bgp-pool"
  labels:
    pool: "blue"
spec:
  blocks:
  - start: "192.168.9.2"
    stop: "192.168.9.254"