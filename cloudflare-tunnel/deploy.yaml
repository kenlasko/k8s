---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflare-tunnel
  namespace: cloudflare
  annotations:
    keel.sh/policy: force
    keel.sh/match-tag: "true"
    keel.sh/trigger: poll
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cloudflare-tunnel
  template:
    metadata:
      labels:
        app: cloudflare-tunnel
        name: cloudflare-tunnel
    spec:
      restartPolicy: Always
      automountServiceAccountToken: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
              - key: kubernetes.io/arch
                operator: In
                values: 
                - "amd64"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - cloudflare-tunnel
            topologyKey: kubernetes.io/hostname
      containers:
        - name: cloudflare-tunnel
          image: cloudflare/cloudflared:latest
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 100
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop: ["ALL"]
          env:
          - name: TOKEN
            valueFrom:
              secretKeyRef:
                name: admin-token
                key: token
          - name: TZ
            value: "America/Toronto"
          resources:
            requests:
              cpu: 5m
              memory: 41Mi
            limits:
              cpu: 100m
              memory: 60Mi
          command:
            - cloudflared
            - tunnel
            - --no-autoupdate
            - --metrics
            - 0.0.0.0:2000
            - run
          args:
            - --token
            - "$(TOKEN)"
          livenessProbe:
            # Cloudflared has a /ready endpoint which returns 200 if and only if
            # it has an active connection to the edge.
            httpGet:
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10