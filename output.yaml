---
# Source: baseline/templates/volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pvc-transmission
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: "3"
      staleReplicaTimeout: "30"
    volumeHandle: pvc-transmission
  storageClassName: longhorn
---
# Source: baseline/templates/volume.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: longhorn-transmission-config-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi
---
# Source: baseline/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: transmission-service
  name: transmission-service
  namespace: default 
  annotations:
    lbipam.cilium.io/ips: 192.168.10.12
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  selector:
    app: transmission
  ports:
    - port: 9091
      protocol: TCP
      targetPort: http
      name: web
    - port: 42615
      protocol: TCP
      targetPort: 
      name: remotedata-tcp
    - port: 42615
      protocol: UDP
      targetPort: 
      name: remotedata-udp
---
# Source: baseline/templates/deploy.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: transmission
  labels:
    app.kubernetes.io/name: transmission
    app.kubernetes.io/version: 4.0.6
spec:
  serviceName: transmission
  replicas: 1
  revisionHistoryLimit: 2
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: transmission
  template:
    metadata:
      labels:
        app: transmission
        app.kubernetes.io/name: transmission
        app.kubernetes.io/version: 4.0.6
        appGroup: media-arr
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      automountServiceAccountToken: false
      priorityClassName: medium-priority
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
              - key: kubernetes.io/arch
                operator: In
                values: 
                - "amd64"
      containers:
      - name: transmission
        image: "docker.io/linuxserver/transmission:4.0.6"
        imagePullPolicy: IfNotPresent # Conditional inclusion of securityContext
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - ALL
          readOnlyRootFilesystem: false
          seccompProfile:
            type: RuntimeDefault
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "100"
        - name: TZ
          value: "America/Toronto"
        resources:
          requests:
            cpu: 2m
            memory: 35Mi
          limits:
            memory: 200Mi
        ports:
        - containerPort: 9091
          name: http
          protocol: TCP
        - containerPort: 42615
          name: remotedata-tcp
          protocol: TCP
        - containerPort: 42615
          name: remotedata-udp
          protocol: UDP
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 15
          periodSeconds: 60
          timeoutSeconds: 5
        volumeMounts:
        - name: transmission-config
          mountPath: /config
        - name: media-downloads
          mountPath: /downloads
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      volumes:
      - name: transmission-config
        persistentVolumeClaim:
          claimName: longhorn-transmission-config-pvc
      - name: media-downloads
        persistentVolumeClaim:
          claimName: map[claimName:nfs-media-downloads]
---
# Source: baseline/templates/httproute.yaml
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: transmission
  namespace: default
spec:
  parentRefs:
  - name: tls
    namespace: cilium
    sectionName: https
  hostnames:
  - "transmission.ucdialplans.com"
  rules:
  - backendRefs:
    - name: transmission-service
      namespace: default
      kind: Service
      port: 9091
