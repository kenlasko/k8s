driver:
  kind: modern_ebpf
tty: true
# collectors:
#   enabled: true
#   docker:
#     enabled: false
#   crio:
#     enabled: false
#   containerd:
#     enabled: false
#   kubernetes:
#     enabled: true
resources:
  requests:
    cpu: 80m
    memory: 100Mi
  limits:
    cpu: 300m
    memory: 120Mi


falcosidekick:
  enabled: true
  config:
    webhook:
      address: http://homeassist-service.homeassist.svc.cluster.local:8123/api/webhook/-H6GkrSTowPZLtenB1zerk1mY
      method: "PUT"
      minimumpriority: warning
  resources:
    requests:
      cpu: 70m
      memory: 55Mi
    limits:
      cpu: 200m
      memory: 250Mi
  affinity: 
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist
          - key: kubernetes.io/arch
            operator: In
            values: 
            - "amd64" 
  webui:
    enabled: true
    replicaCount: 1
    existingSecret: sidekick-creds
    service:
      type: NodePort
      port: 2802
      targetPort: 2802
      nodePort: 30128

    affinity: 
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
            - key: kubernetes.io/arch
              operator: In
              values: 
              - "amd64" 
    redis:
      enabled: true
      #storageSize: "2Gi"
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
              - key: kubernetes.io/arch
                operator: In
                values: 
                - "amd64" 


falcoctl:
  artifact:
    install:
      enabled: true
    follow:
      enabled: true
  config:
    artifact:
      install:
        refs: [falco-rules:latest, falco-incubating-rules:latest, k8saudit-rules:latest]
      follow:
        refs: [falco-rules:latest, falco-incubating-rules:latest, k8saudit-rules:latest]

services:
- name: k8saudit-webhook
  type: ClusterIP
  ports:
  - port: 9765
    targetPort: 9765
    protocol: TCP
    name: http

falco:
  rules_files:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/falco-incubating_rules.yaml
    - /etc/falco/k8s_audit_rules.yaml
    - /etc/falco/rules.d
  plugins:
    - name: k8saudit
      library_path: libk8saudit.so
      init_config: ""
      open_params: "http://:9765/k8s-audit"
    - name: json
      library_path: libjson.so
      init_config: ""
  load_plugins: [k8saudit, json]

customRules:
  custom-rules.yaml: |-
    - rule: Clear Log Activities
      exceptions:
      - name: allowed_to_clear
        fields: [container.name, proc.pname, proc.name] 
        comps: [=,=,=]
        values:
        - [host, k3s-agent, containerd]
        - [host, k3s-server, containerd]
        - [engine-manager, longhorn-instan, tee]
        - [instance-manager, longhorn-instan, tee]
      override:
        exceptions: append

    - rule: Contact K8S API Server From Container
      exceptions:
      - name: allowed_to_contact_api_server
        fields: [k8s.ns.name] 
        comps: [=]
        values:
        - [argocd]
        - [cert-manager]
        - [cilium]
        - [cloudflare]
        - [external-dns]
        - [falco]
        - [headlamp]
        - [intel-gpu]
        - [longhorn]
        - [media-tools]
        - [metallb-system]
        - [monitoring]
        - [netdata]
        - [nfs-provisioner]
        - [portainer]
        - [system-upgrade]
        - [tailscale]
      override:
        exceptions: append

    - rule: Drop and execute new binary in container
      exceptions:
      - name: allowed_to_execute_new_binary
        fields: [container.name, proc.name] 
        comps: [=,in]
        values:
        - [plex, [CrashUploader, Plex Media Fing, Plex Media Scan, Plex Media Serv, Plex Script Hos, Plex Transcoder, Plex Tuner Serv]]
      - name: allowed_to_execute_new_binary_no_namespace
        fields: [proc.name, proc.pname] 
        comps: [in,=]
        values:
        - [[awk, basename, cat, grep, ip6tables-legac, iptables-legacy, readlink, sed, timeout, tr, wc], iptables-restor]
        - [[iptables-restor], kubectl]
        - [[iptables-nft-sa], sh]
        - [[ip6tables-nft-s,sh], timeout]
        - [[kubectl], upgrade.sh]
        - [[dirname, ln, which], xtables-set-mod]
        - [[kubectl], containerd-shim]
      override:
        exceptions: append

    - rule: Linux Kernel Module Injection Detected
      exceptions:
      - name: allowed_injection
        fields: [k8s.ns.name, container.name, proc.pname] 
        comps: [=,=,=]
        values:
        - [longhorn, instance-manager, longhorn]
      override:
        exceptions: append

    - rule: Packet socket created in container
      exceptions:
      - name: allowed_socket_creation
        fields: [k8s.ns.name, container.name, proc.pname] 
        comps: [=,=,=]
        values:
        - [cilium, cilium-agent, containerd-shim]
      override:
        exceptions: append

    - rule: Redirect STDOUT/STDIN to Network Connection in Container
      exceptions:
      - name: allowed_to_do_stdout_stdin
        fields: [k8s.ns.name] 
        comps: [=]
        values:
        - [argocd]
        - [gitea]
        - [homeassist]
        - [kube-system]
        - [longhorn]
        - [mariadb]
        - [ucdialplans]
      override:
        exceptions: append

    - rule: Run shell untrusted
      exceptions:
      - name: allowed_shell
        fields: [k8s.ns.name, container.name, proc.pname] 
        comps: [=,=,in]
        values:
        - [mariadb, mariadb-galera, [mysqld]]
      override:
        exceptions: append