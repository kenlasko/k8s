driver:
  kind: modern-bpf
collectors:
  enabled: true
  docker:
    enabled: false
  crio:
    enabled: false
  containerd:
    enabled: true
    socket: /run/k3s/containerd/containerd.sock

customRules:
  custom-rules.yaml: |-
    - rule: Contact K8S API Server From Container
      exceptions:
      - name: allowed_to_contact_api_server
        fields: [k8s.ns.name, container.name, proc.name] 
        comps: [=,=]
        values:
        - [argocd, repo-server, git]
        - [headlamp, headlamp, headlamp-server]
        - [monitoring, grafana-sc-dashboard, python]
        - [monitoring, grafana-sc-datasources, python]
        - [netdata, netdata, curl]
        - [portainer, portainer, portainer]
      append: true

falcosidekick:
  enabled: true
  webui:
    enabled: true
    user: "kenadmin:U3H7zfWZkPXf*$$he"
    affinity: 
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
            - key: kubernetes.io/arch
              operator: In
              values: 
              - 'amd64' 
    redis:
      enabled: true
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
              - key: kubernetes.io/arch
                operator: In
                values: 
                - 'amd64' 
