driver:
  kind: modern-bpf
collectors:
  enabled: true
  docker:
    enabled: false
  crio:
    enabled: false
  containerd:
    enabled: true
    socket: /run/k3s/containerd/containerd.sock
  kubernetes:
    enabled: true
resources:
  requests:
    cpu: 80m
    memory: 100Mi
  limits:
    cpu: 180m
    memory: 100Mi
  
customRules:
  custom-rules.yaml: |-
    - rule: Clear Log Activities
      exceptions:
      - name: allowed_to_clear
        fields: [container.name, proc.pname, proc.name] 
        comps: [=,=,=]
        values:
        - [host, k3s-agent, containerd]
        - [host, k3s-server, containerd]
        - [engine-manager, longhorn-instan, tee]
        - [instance-manager, longhorn-instan, tee]
      override:
        exceptions: append

    - rule: Contact K8S API Server From Container
      exceptions:
      - name: allowed_to_contact_api_server
        fields: [k8s.ns.name] 
        comps: [=]
        values:
        - [argocd]
        - [cert-manager]
        - [cilium]
        - [cloudflare]
        - [external-dns]
        - [falco]
        - [headlamp]
        - [intel-gpu]
        - [longhorn]
        - [media-tools]
        - [metallb-system]
        - [monitoring]
        - [netdata]
        - [nfs-provisioner]
        - [portainer]
        - [system-upgrade]
        - [tailscale]
        - [traefik]
      override:
        exceptions: append

    - rule: Drop and execute new binary in container
      exceptions:
      - name: allowed_to_execute_new_binary
        fields: [k8s.ns.name, container.name, proc.name] 
        comps: [=,=,in]
        values:
        - [media-tools, plex, [CrashUploader, Plex Media Fing, Plex Media Scan, Plex Media Serv, Plex Script Hos, Plex Transcoder, Plex Tuner Serv]]
      override:
        exceptions: append

    - rule: Linux Kernel Module Injection Detected
      exceptions:
      - name: allowed_injection
        fields: [k8s.ns.name, container.name, proc.pname] 
        comps: [=,=,=]
        values:
        - [longhorn, instance-manager, longhorn]
      override:
        exceptions: append

    - rule: Packet socket created in container
      exceptions:
      - name: allowed_socket_creation
        fields: [k8s.ns.name, container.name, proc.pname] 
        comps: [=,=,=]
        values:
        - [cilium, cilium-agent, containerd-shim]
      override:
        exceptions: append

    - rule: Redirect STDOUT/STDIN to Network Connection in Container
      exceptions:
      - name: allowed_to_do_stdout_stdin
        fields: [k8s.ns.name] 
        comps: [=]
        values:
        - [argocd]
        - [gitea]
        - [homeassist]
        - [kube-system]
        - [longhorn]
        - [ucdialplans]
      override:
        exceptions: append

    - rule: Run shell untrusted
      exceptions:
      - name: allowed_shell
        fields: [k8s.ns.name, container.name, proc.pname] 
        comps: [=,=,in]
        values:
        - [mariadb, mariadb-galera, [mysqld]]
      override:
        exceptions: append

falcosidekick:
  enabled: true
  config:
    webhook:
      address: http://homeassist-service.homeassist.svc.cluster.local:8123/api/webhook/-H6GkrSTowPZLtenB1zerk1mY
      method: "PUT"
      minimumpriority: warning
  affinity: 
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist
          - key: kubernetes.io/arch
            operator: In
            values: 
            - 'amd64' 
  webui:
    enabled: true
    existingSecret: sidekick-creds
    affinity: 
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
            - key: kubernetes.io/arch
              operator: In
              values: 
              - 'amd64' 
    redis:
      enabled: true
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
              - key: kubernetes.io/arch
                operator: In
                values: 
                - 'amd64' 
