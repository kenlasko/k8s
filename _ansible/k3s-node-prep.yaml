---
# Installs prerequisites for all K3S nodes
- hosts: k3s-workers
  become: true
  become_user: root
  tasks:
  - name: Install Longhorn prereq - NFS Common
    ansible.builtin.apt:
      name: nfs-common
      state: present
  - name: Install Longhorn prereq - Open-ISCSI
    ansible.builtin.apt:
      name: open-iscsi
      state: present
  - name: Install Longhorn prereq - Linux Utils
    ansible.builtin.apt:
      name: util-linux
      state: present
  - name: Create /kube-storage folder
    file:
      path: /kube-storage
      state: directory
  - name: Create /kube-storage/mariadb folder
    file:
      path: /kube-storage/mariadb
      state: directory


- hosts: k3s-servers
  become: true
  become_user: root
  tasks:
  - name: Install registry prereq - Apache2 Utils
    ansible.builtin.apt:
      name: apache2-utils
      state: present
  - name: Create /var/lib/rancher/k3s/server/ folder
    file:
      path: /var/lib/rancher/k3s/server/
      state: directory
  - name: Create pod security admissions file
    copy:
      dest: "/var/lib/rancher/k3s/server/psa.yaml"
      content: |
        apiVersion: apiserver.config.k8s.io/v1
        kind: AdmissionConfiguration
        plugins:
        - name: PodSecurity
          configuration:
            apiVersion: pod-security.admission.config.k8s.io/v1beta1
            kind: PodSecurityConfiguration
            defaults:
              enforce: "baseline"
              enforce-version: "latest"
            exemptions:
              usernames: []
              runtimeClasses: []
              namespaces: [kube-system, cert-manager, cilium, homeassist, intel-gpu, longhorn, monitoring, netdata]


- hosts: k3s-all
  become: true
  become_user: root
  tasks:      
  - name: Install Kubescape prereq - runc
    ansible.builtin.apt:
      name: runc
      state: present
  - name: Set timezone
    community.general.timezone:
      name: America/Toronto
  - name: Disable swap
    ansible.builtin.shell: swapoff -a
  - name: Disable SWAP in fstab
    replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'
  - name: Set kernel parameters - VM Panic on OOM
    ansible.posix.sysctl:
      name: vm.panic_on_oom
      value: '0'
      sysctl_file: /etc/sysctl.d/90-kubelet.conf
      state: present
  - name: Set kernel parameters - mem overcommit
    ansible.posix.sysctl:
      name: vm.overcommit_memory
      value: '1'
      sysctl_file: /etc/sysctl.d/90-kubelet.conf
      state: present
  - name: Set kernel parameters - Kernel panic
    ansible.posix.sysctl:
      name: kernel.panic
      value: '10'
      sysctl_file: /etc/sysctl.d/90-kubelet.conf
      state: present
  - name: Set kernel parameters - Kernel panic on oops
    ansible.posix.sysctl:
      name: kernel.panic_on_oops
      value: '1'
      sysctl_file: /etc/sysctl.d/90-kubelet.conf
      state: present
  - name: Remove existing resolv.conf symlink
    ansible.builtin.file:
      path: /etc/resolv.conf
      state: absent      
  - name: Reconfigure resolv.conf to use proper DNS
    ansible.builtin.file:
      src: /run/systemd/resolve/resolv.conf
      dest: /etc/resolv.conf
      state: link
  - name: Restart systemd-resolved
    ansible.builtin.service:
      name: systemd-resolved
      state: restarted
  - name: Disable password login
    lineinfile: 
      dest: /etc/ssh/sshd_config.d/50-cloud-init.conf 
      regexp: '^(#\s*)?PasswordAuthentication '
      line: 'PasswordAuthentication no'
  - name: Restart systemd-resolved
    ansible.builtin.service:
      name: ssh
      state: restarted