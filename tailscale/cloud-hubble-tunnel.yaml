apiVersion: v1
kind: Pod
metadata:
  name: cloud-hubble-egress-tunnel
  namespace: tailscale
  labels:
    app: cloud-hubble-egress-tunnel
spec:
  containers:
  - name: cloud-hubble-egress-tunnel
    image: alpine/socat
    args: ["tcp-listen:80,fork,reuseaddr", "tcp-connect:cloud-hubble-egress:80"]
    ports:
    - containerPort: 80
  restartPolicy: Always
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist
          - key: kubernetes.io/arch
            operator: In
            values: 
            - 'amd64'

---
apiVersion: v1
kind: Service
metadata:
  name: cloud-hubble-egress-tunnel
  namespace: tailscale
spec:
  selector:
    app: cloud-hubble-egress-tunnel
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    tailscale.com/proxy-class: "run-on-worker"
  annotations:
    tailscale.com/tailnet-fqdn: 'cloud-hubble.tailb7050.ts.net'
  name: cloud-hubble-egress
spec:
  externalName: cloud-hubble-egress
  type: ExternalName

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: cloud-hubble
  namespace: tailscale
spec:
  parentRefs:
  - name: tls
    namespace: cilium
    sectionName: https
  hostnames:
  - "cloud-hubble.ucdialplans.com"
  rules:
  - backendRefs:
    - name: cloud-hubble-egress-tunnel
      namespace: tailscale
      kind: Service
      port: 80