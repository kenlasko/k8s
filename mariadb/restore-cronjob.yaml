---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mariadb-restore
  namespace: mariadb
spec:
  schedule: "@yearly" 
  suspend: true
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            mariadb-client: "true"
        spec:
          dnsPolicy: ClusterFirstWithHostNet
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
          automountServiceAccountToken: false
          containers:
          - name: mariadb-backup
            image: mariadb:11.4.3
            imagePullPolicy: IfNotPresent
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              runAsNonRoot: true
              runAsUser: 1001
              runAsGroup: 100
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop: ["ALL"]
            resources:
              requests:
                cpu: 500m
                memory: 700Mi
              limits:
                cpu: 1500m
                memory: 1400Mi
            env: 
            - name: MARIADB_ROOT_PASSWORD 
              valueFrom: 
                secretKeyRef: 
                  name: mariadb-passwords
                  key: mariadb-root-password
            - name: MARIADB_PROCEDURES
              valueFrom:
                configMapKeyRef:
                  name: mariadb-procedures
                  key: mariadb-procedures
            command: 
            - /bin/sh
            - -c
            - SERVER="mariadb" &&
              echo "$(date +%F_%T) Dropping existing MariaDB databases..." &&
              DB_LIST=$(tr '\n' ' ' < /backup/mariadb-databases.txt) &&
              SQL_CMD=""; for DB in $DB_LIST; do SQL_CMD="$SQL_CMD DROP DATABASE IF EXISTS \`$DB\`;"; done &&
              mariadb -h $SERVER -u root -p$MARIADB_ROOT_PASSWORD -e "$SQL_CMD" &&
              NEWEST_SQL_FILE=$(ls -t /backup/mariadb-backup-*.sql /backup/backup.*.sql 2>/dev/null | head -n 1) &&
              echo "$(date +%F_%T) Restoring MariaDB databases from $NEWEST_SQL_FILE..." && 
              mariadb -h $SERVER -u root -p$MARIADB_ROOT_PASSWORD < $NEWEST_SQL_FILE && 
              echo "$(date +%F_%T) MariaDB databases have been restored" &&
              echo "$(date +%F_%T) Restoring procedures..." &&
              mariadb -h $SERVER -u root -p$MARIADB_ROOT_PASSWORD -e "$MARIADB_PROCEDURES" &&
              echo "$(date +%F_%T) Restoring users..." &&
              mariadb -h $SERVER -u root -p$MARIADB_ROOT_PASSWORD < /backup/mariadb-users.sql &&
              echo "$(date +%F_%T) Finished!"
            volumeMounts:
            - name: data
              mountPath: /backup
          restartPolicy: Never
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: nfs-mariadb-backup

