apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
    argocd.argoproj.io/instance: pihole
  name: pihole
  namespace: pihole
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pihole
      release: pihole
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum.config.adlists: 2446386b146d4edc21e1700fe146859be6cf7b7c370292288244598f7c018f3
        checksum.config.blacklist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.dnsmasqConfig: a1c5eeb3abf5acdfd1723a7f31cf71510f88b10b81321fe7254a10a2d5578ea
        checksum.config.regex: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.staticDhcpConfig: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
        checksum.config.whitelist: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546
      labels:
        app: pihole
        release: pihole
    spec:
      containers:
        - env:
            - name: WEB_PORT
              value: '80'
            - name: VIRTUAL_HOST
              value: pi.hole
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pihole-password
            - name: PIHOLE_DNS_
              value: 1.1.1.1;1.0.0.1
          image: 'pihole/pihole:latest'
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /admin/index.php
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pihole
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 53
              name: dns
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 443
              name: https
              protocol: TCP
            - containerPort: 67
              name: client-udp
              protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /admin/index.php
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/pihole
              name: config
            - mountPath: /etc/dnsmasq.d/02-custom.conf
              name: custom-dnsmasq
              subPath: 02-custom.conf
            - mountPath: /etc/addn-hosts
              name: custom-dnsmasq
              subPath: addn-hosts
            - mountPath: /etc/dnsmasq.d/05-pihole-custom-cname.conf
              name: custom-dnsmasq
              subPath: 05-pihole-custom-cname.conf
            - mountPath: /etc/pihole/adlists.list
              name: adlists
              subPath: adlists.list
            - mountPath: /var/log/pihole
              name: pihole-logs
        - name: mediapc-urlwatcher
          image: registry.ucdialplans.com/mediapc-urlwatcher
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 5Mi
            limits:
              cpu: 100m
              memory: 5Mi
          volumeMounts:
          - name: pihole-logs
            mountPath: /var/log/pihole      
      
      dnsConfig:
        nameservers:
          - 127.0.0.1
          - 192.168.1.1
      dnsPolicy: None
      hostname: pihole
      nodeSelector:
        server-type: nuc
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: pihole
        - configMap:
            defaultMode: 420
            name: pihole-custom-dnsmasq
          name: custom-dnsmasq
        - configMap:
            defaultMode: 420
            name: pihole-adlists
          name: adlists
        - emptyDir: {}
          name: pihole-logs