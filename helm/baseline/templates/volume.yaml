{{- if .Values.persistentVolume }}
{{- $name := coalesce .Values.nameOverride .Release.Name }}
{{- $volname := coalesce .Values.persistentVolume.name .Values.nameOverride .Release.Name }}
{{- $volsize := .Values.persistentVolume.size | default "1Gi" }}
{{- if eq .Values.persistentVolume.type "longhorn" }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pvc-{{ $volname }}
spec:
  storageClassName: longhorn
  capacity:
    storage: {{ $volsize }}
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeHandle: pvc-{{ $volname }}
    volumeAttributes:
      numberOfReplicas: "3"
      staleReplicaTimeout: "30"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: longhorn-{{ $volname }}-config-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: {{ $volsize }}

{{- else if eq .Values.persistentVolume.type "nfs" }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-{{ $volname }}
  annotations:
    pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
spec:
  storageClassName: nfs-csi
  capacity:
    storage: {{ $volsize }}
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  csi:
    driver: nfs.csi.k8s.io
    volumeHandle: 192.168.1.3/appdata/vol/{{ $name }}
    volumeAttributes:
      server: 192.168.1.3
      share: /appdata/vol/{{ $name }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-{{ $volname }}
  namespace: {{ .Release.Namespace }}
spec:
  storageClassName: nfs-csi
  volumeName: nfs-{{ $volname }}
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ $volsize }}
  {{- if .Values.backup | default false}}
  dataSourceRef:
    kind: ReplicationDestination
    apiGroup: volsync.backube
    name: s3-backup-{{ .Values.backup.location | default "nas01" }}-{{ $name }}
  {{ end }}
  
{{- else if eq .Values.persistentVolume.type "local-path" }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-{{ $volname }}
  namespace: {{ .Release.Namespace }}
spec:
  storageClassName: local-path
  accessModes:
  - ReadWriteOnce 
  resources:
    requests:
      storage: {{ $volsize }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-{{ $volname }}
spec:
  storageClassName: local-path
  capacity:
    storage: {{ $volsize }}
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  local:
    path: "/var/{{ $volname }}"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - onode1
{{- end }}
{{- end }}