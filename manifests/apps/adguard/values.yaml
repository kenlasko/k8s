image:
  repository: adguard/adguardhome
  tag: v0.107.57
  registry: docker.io
priorityClassName: medium-priority
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 100
  seccompProfile:
    type: RuntimeDefault
env:
- name: TZ
  value: "America/Toronto"
resources:
  requests:
    cpu: 60m
    memory: 150Mi
  limits:
    # cpu: 2000m
    memory: 250Mi
livenessProbe:
  failureThreshold: 10
  httpGet:
    path: /login.html
    port: http
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
readinessProbe:
  failureThreshold: 3
  httpGet:
    path: /login.html
    port: http
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
persistentVolume:
  type: nfs
  mountPath: /adguard
extraVolumes:
- name: dns-wildcard-cert
  secret:
    secretName: letsencrypt-dns-wildcard-cert
extraVolumeMounts:
- name: adguard-config
  mountPath: /opt/adguardhome/conf
  subPath: conf
- name: adguard-config
  mountPath: /opt/adguardhome/work
  subPath: work
- name: dns-wildcard-cert
  mountPath: /etc/certs
backup:
  claimName: nfs-adguard-conf
  schedule: "05 6 * * *"
service:
  port: 3000
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: "home-adguard"
  extraLabels:
    tailscale.com/proxy-class: "run-on-worker"
extraPorts:
- port: 443
  name: adguard-tls
  protocol: TCP
tailscale:
  name: cloud-adguard-egress