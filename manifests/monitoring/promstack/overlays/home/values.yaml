alertmanager:
  config:
    global:
      slack_api_url_file: /etc/alertmanager/secrets/alertmanager-secrets/slack_webhook 
      smtp_smarthost: "smtp.sendgrid.net:587"
      smtp_from: "AlertManager <alertmanager@ucdialplans.com>"
      smtp_auth_username: "apikey"
      smtp_auth_password_file: /etc/alertmanager/secrets/alertmanager-secrets/smtp_auth_password
      resolve_timeout: 5m
    route:
      group_wait: 5m
      group_interval: 10m
      repeat_interval: 4h
      receiver: "null"
      routes:
      - receiver: "slack-webhook"
        matchers:
        - severity = "warning"
        continue: false
      - receiver: "ken-gmail"
        matchers:
        - severity = "warning"
        continue: false
    receivers:
    - name: "null"
    - name: ken-gmail
      email_configs:
      - to: ken.lasko@gmail.com
    - name: slack-webhook
      slack_configs:
      - channel: home-alerts
        send_resolved: true
  alertmanagerSpec:
    externalUrl: "https://alertmanager.ucdialplans.com"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: nfs-csi-dynamic
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

grafana:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist
          - key: kubernetes.io/arch
            operator: In
            values: 
            - "amd64"
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: nfs-csi-dynamic
    accessModes: ["ReadWriteMany"]

prometheusOperator:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist
          - key: kubernetes.io/arch
            operator: In
            values: 
            - "amd64"

prometheus:
  prometheusSpec:
    resources:
      requests:
        cpu: 70m
        memory: 450Mi
      limits:
        # cpu: 600m
        memory: 1100Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
            - key: kubernetes.io/arch
              operator: In
              values: 
              - "amd64"
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: nfs-csi-dynamic
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi