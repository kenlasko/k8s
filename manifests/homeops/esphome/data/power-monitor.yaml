substitutions:
# Interval of how often the power is updated
  update_time: 10s
  
  gain_ct_100a: '29700'
  gain_ct_20a: '10645'
  gain_voltage: '7305'

esphome:
  name: "power-monitor"

esp32:
  board: nodemcu-32s
   
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  power_save_mode: none
  fast_connect: on
  use_address: power-monitor

# Enable logging
logger:
  level: INFO

api:

ota:
- platform: esphome

# web_server:
#   port: 80

spi:
  clk_pin: 18
  miso_pin: 19
  mosi_pin: 23

sensor:
  - platform: wifi_signal
    name: WiFi
    update_interval: 120s
    
# Board 1A #
  - platform: atm90e32
    cs_pin: 5
    line_frequency: 60Hz
    gain_pga: 1X

    # B1-CT1 - Mains 1
    phase_a:
      voltage:
        id: main1Volts
        accuracy_decimals: 1
      current:
        id: main1Amps
      power:
        id: main1Watts
        accuracy_decimals: 0
      power_factor:
        name: PF-1
        id: main1PF
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_100a}

    # B1-CT2 - Mains 2
    phase_b:
      voltage:
        id: main2Volts
        accuracy_decimals: 1
      current:
        id: main2Amps
      power:
        id: main2Watts
        accuracy_decimals: 0
      power_factor:
        name: PF-2
        id: main2PF
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_100a}
    
    # B1-CT3 - Fridge
    phase_c:
      power:
        name: Fridge Watts
        id: fridgeWatts
        accuracy_decimals: 0
        unit_of_measurement: W
        device_class: power
        state_class: measurement
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_20a}
    update_interval: 15s
    
# Board 1B #
  - platform: atm90e32
    cs_pin: 4
    line_frequency: 60Hz
    gain_pga: 1X

    # B1-CT4 - Subpanel 1
    phase_a:
      current:
        id: apt1Amps
      power:
        id: apt1Watts
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_100a}

    # B1-CT5 - Subpanel 2
    phase_b:
      current:
        id: apt2Amps
      power:
        id: apt2Watts
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_100a}

    # B1-CT6 - Microwave
    phase_c:
      power:
        name: Microwave Watts
        id: microwaveWatts
        accuracy_decimals: 0
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        filters:
          # filter out negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_20a}
    update_interval: 15s

# Board 2A #
  - platform: atm90e32
    cs_pin: 15
    line_frequency: 60Hz
    gain_pga: 1X

    # B2-CT1 - Wall Oven 1
    phase_a:
      power:
        id: wallOven1Watts
        filters:
          # filter out negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_100a}
  
    # B2-CT2 - Wall Oven 2
    phase_b:
      power:
        id: wallOven2Watts
        filters:
          # filter out negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_100a}
    
    # B2-CT3 - Washer
    phase_c:
      power:
        name: Washer Watts
        id: washerWatts
        accuracy_decimals: 0
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        filters:
          # filter out negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_20a}
    update_interval: 15s 
      
# Board 2B #
  - platform: atm90e32
    cs_pin: 16
    line_frequency: 60Hz
    gain_pga: 1X

    # B2-CT4 - Cooktop 1
    # Dead connection or something
      
    # B2-CT5 - Cooktop 2
    phase_b:
      voltage:
        id: cooktop2Volts
        accuracy_decimals: 0
        filters:
          # filter out negative values
          - lambda: if (x < 0.00) return 0; else return x;
      power_factor:
        id: cooktop2PF
        filters:
          # filter out negative values
          - lambda: if (x < 0.00) return 0; else return x;
      current:
        id: cooktop2Amps
        filters:
          # filter out negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: 26487
      
    # B2-CT6 - Dryer
    phase_c:
      power:
        name: Dryer Watts
        id: dryerWatts
        accuracy_decimals: 0
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        filters:
          # filter out negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_20a}
    update_interval: 15s 

# Board 3A #
  - platform: atm90e32
    cs_pin: 14
    line_frequency: 60Hz
    gain_pga: 1X

    # B3-CT1 - AC 1
    phase_a:
      power:
        id: airCon1Watts
        filters:
          # filter out slightly negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_100a}
  
    # B3-CT2 - AC 2
    phase_b:
      power:
        id: airCon2Watts
        filters:
          # filter out slightly negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_100a}
    
    # B3-CT3 - Furnace
    phase_c:
      power:
        name: Furnace Watts
        id: furnaceWatts
        accuracy_decimals: 0
        unit_of_measurement: W
        device_class: power
        state_class: measurement
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_20a}
      
# Board 3B #
  - platform: atm90e32
    cs_pin: 17
    line_frequency: 60Hz
    gain_pga: 1X

    # B3-CT4 - Network
    phase_a:
      power:
        name: Network Watts
        id: networkWatts
        accuracy_decimals: 0
        unit_of_measurement: W
        device_class: power
        state_class: measurement
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_20a}
      
    # B3-CT5 - Servers
    phase_b:
      power:
        name: Server Watts
        id: serverWatts
        accuracy_decimals: 0
        unit_of_measurement: W
        device_class: power
        state_class: measurement
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_20a}
      
    # B3-CT6 - Dishwasher
    phase_c:
      power:
        name: Dishwasher Watts
        id: dishwasherWatts
        accuracy_decimals: 0
        unit_of_measurement: W
        device_class: power
        state_class: measurement
        filters:
          # filter out slightly negative values
          - lambda: if (x < 0.00) return 0; else return x;
      gain_voltage: ${gain_voltage}
      gain_ct: ${gain_ct_20a}

  - platform: template
    name: Volts
    id: avgVolts
    lambda: return ((id(main1Volts).state + id(main2Volts).state) / 2);
    accuracy_decimals: 1
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    update_interval: ${update_time}
    
  - platform: template
    name: Total Watts
    id: totalWatts
    lambda: return (id(main1Watts).state + id(main2Watts).state);
    accuracy_decimals: 0
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    update_interval: ${update_time}
    
  - platform: template
    name: Total Amps
    id: totalAmps
    lambda: return (id(main1Amps).state + id(main2Amps).state);
    accuracy_decimals: 2
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    update_interval: ${update_time}
    
  - platform: total_daily_energy
    name: Total Daily kW
    power_id: totalWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing

  - platform: template
    name: Apartment Watts
    id: aptWatts
    lambda: return (id(apt1Watts).state + id(apt2Watts).state);
    accuracy_decimals: 0
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    update_interval: ${update_time}
    
  - platform: total_daily_energy
    name: Apartment Daily kW
    power_id: aptWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
  
  - platform: template
    name: House Watts
    id: houseWatts
    lambda: return (id(totalWatts).state - id(aptWatts).state);
    accuracy_decimals: 0
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    
  - platform: template
    name: PowerMon1 Total Watts
    id: powerMon1TotalWatts
    lambda: return (id(cooktopWatts).state + id(wallOvenWatts).state + id(fridgeWatts).state + id(microwaveWatts).state + id(dishwasherWatts).state + id(washerWatts).state + id(dryerWatts).state + id(furnaceWatts).state + id(airConWatts).state + id(networkWatts).state + id(serverWatts).state);
    accuracy_decimals: 0
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    update_interval: ${update_time}

  - platform: total_daily_energy
    name: House Daily kW
    power_id: houseWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing

  - platform: template
    name: Wall Oven Watts
    id: wallOvenWatts
    lambda: return (id(wallOven1Watts).state + id(wallOven2Watts).state);
    accuracy_decimals: 0
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    update_interval: ${update_time}

  - platform: total_daily_energy
    name: Wall Oven Daily kW
    power_id: wallOvenWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing

  - platform: template
    name: Cooktop Watts
    id: cooktopWatts
    lambda: return (id(cooktop2Amps).state * id(cooktop2Volts).state * id(cooktop2PF).state * 2);
    accuracy_decimals: 0
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    update_interval: ${update_time}
    
  - platform: total_daily_energy
    name: Cooktop Daily kW
    power_id: cooktopWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing

  - platform: total_daily_energy
    name: Fridge Daily kW
    power_id: fridgeWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    
  - platform: total_daily_energy
    name: Microwave Daily kW
    power_id: microwaveWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    
  - platform: total_daily_energy
    name: Dishwasher Daily kW
    power_id: dishwasherWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    
  - platform: total_daily_energy
    name: Washer Daily kW
    power_id: washerWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    
  - platform: total_daily_energy
    name: Dryer Daily kW
    power_id: dryerWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing

  - platform: total_daily_energy
    name: Server Daily kW
    power_id: serverWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    
  - platform: total_daily_energy
    name: Network Daily kW
    power_id: networkWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing

  - platform: total_daily_energy
    name: Furnace Daily kW
    power_id: furnaceWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    
  - platform: total_daily_energy
    name: PowerMon1 Total Daily kWh
    power_id: powerMon1TotalWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing

  - platform: template
    name: AirCon Watts
    id: airConWatts
    lambda: return (id(airCon1Watts).state + id(airCon2Watts).state);
    accuracy_decimals: 0
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    update_interval: ${update_time}
    
  - platform: total_daily_energy
    name: AirCon Daily kW
    power_id: airConWatts
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy
    state_class: total_increasing
    
switch:
  - platform: restart
    name: PowerMon1 Restart  

time:
  - platform: homeassistant
    id: homeassistant_time  
    