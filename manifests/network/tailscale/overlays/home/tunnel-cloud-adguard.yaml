apiVersion: v1
kind: Pod
metadata:
  name: cloud-adguard-tunnel
  namespace: tailscale
  labels:
    app: cloud-adguard-tunnel
spec:
  containers:
  - name: cloud-adguard-tunnel
    image: alpine/socat:1.8.0.3
    imagePullPolicy: IfNotPresent
    args: ["tcp-listen:3000,fork,reuseaddr", "tcp-connect:cloud-adguard-link:3000"]
    ports:
    - containerPort: 3000
    resources:
      requests:
        cpu: 1m
        memory: 5Mi
      limits:
        # cpu: 50m
        memory: 10Mi
  restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: cloud-adguard-tunnel
  namespace: tailscale
spec:
  selector:
    app: cloud-adguard-tunnel
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tailscale.com/proxy-class: "default"
    tailscale.com/tailnet-fqdn: "cloud-adguard.tailb7050.ts.net"
    tailscale.com/hostname: cloud-adguard-link
  name: cloud-adguard-link
spec:
  externalName: cloud-adguard-link
  type: ExternalName

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: cloud-adguard
  namespace: tailscale
spec:
  parentRefs:
  - name: tls
    namespace: cilium
    sectionName: https
  hostnames:
  - "cloud-adguard.ucdialplans.com"
  rules:
  - backendRefs:
    - name: cloud-adguard-tunnel
      namespace: tailscale
      kind: Service
      port: 3000