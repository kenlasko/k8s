apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: postgres
spec:
  instances: 3
  failoverDelay: 15
  storage:
    storageClass: local-path
    size: 15Gi
  enableSuperuserAccess: true
  superuserSecret:
    name: postgres-superuser
  certificates:
    serverAltDNSNames:
    - "home-postgres.tailb7050.ts.net"
    - "home-postgres"
    - "home-postgres.svc.cluster.local"
  backup:
    retentionPolicy: "30d"
    barmanObjectStore:
      endpointURL: "http://nas01.ucdialplans.com:8010"
      destinationPath: "s3://postgres"
      s3Credentials:
        accessKeyId:
          name: nas-s3-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: nas-s3-creds
          key: ACCESS_KEY_SECRET
  managed:
    roles:
    - name: immich
      ensure: present
      login: true
      superuser: false
      inherit: false
      connectionLimit: 1
      passwordSecret:
        name: useraccount-immich
    services:
      additional:
      - selectorType: rw
        updateStrategy: patch
        serviceTemplate:
          metadata:
            name: "postgres-service"
            labels:
              tailscale.com/proxy-class: "run-on-worker"
            annotations:
              #lbipam.cilium.io/ips: 192.168.1.15
              tailscale.com/expose: "true"
              tailscale.com/hostname: "home-postgres"
          spec:
            type: LoadBalancer
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          # - key: kubernetes.io/hostname
          #   operator: In
          #   values:
          #   - nuc3
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist
          - key: kubernetes.io/arch
            operator: In
            values: 
            - "amd64"