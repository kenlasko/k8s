configuration:
  backupStorageLocation:
  - name: nas-s3
    provider: aws
    bucket: kube
    default: true
    config:
      s3Url: http://nas01.ucdialplans.com:8010
      s3ForcePathStyle: true
      region: "default"
    credential:
      name: s3-credentials
      key: cloud
  - name: cloudflare-s3
    provider: aws
    bucket: appdata
    default: false
    config:
      s3Url: https://fa831d805d821b7c4627b464a9845a9d.r2.cloudflarestorage.com
      s3ForcePathStyle: true
      region: auto
      checksumAlgorithm: ''
    credential:
      name: cloudflare-s3-credentials
      key: cloud
  - name: oracle-s3
    provider: aws
    bucket: appdata
    prefix: kenlasko
    use-volume-snapshots: false
    default: false
    config:
      s3Url: https://kenlasko.compat.objectstorage.ca-toronto-1.oraclecloud.com/appdata
      s3ForcePathStyle: true
      region: 'ca-toronto-1'
      checksumAlgorithm: ''
    credential:
      name: oracle-s3-credentials
      key: cloud
  volumeSnapshotLocation:
  - name: nas-s3
    provider: csi
  features: EnableCSI
  defaultBackupStorageLocation: nas-s3
  defaultVolumeSnapshotLocations: csi:nas-s3
  defaultSnapshotMoveData: true

deployNodeAgent: true
nodeAgent:
  podSecurityContext:
    runAsUser: 0
  containerSecurityContext:
    privileged: true
    allowPrivilegeEscalation: true
    readOnlyRootFilesystem: false

credentials:      
  useSecret: true
  existingSecret: s3-credentials

initContainers:
- name: velero-plugin-for-aws
  image: velero/velero-plugin-for-aws:latest
  imagePullPolicy: Always
  volumeMounts:
  - mountPath: /target
    name: plugins

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: node-role.kubernetes.io/control-plane
          operator: DoesNotExist
        - key: kubernetes.io/arch
          operator: In
          values: 
          - 'amd64'
