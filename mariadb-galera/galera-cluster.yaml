apiVersion: k8s.mariadb.com/v1alpha1
kind: MariaDB
metadata:
  name: mariadb
  namespace: mariadb-galera
spec:
  rootPasswordSecretKeyRef:
    generate: false
    name: mariadb-passwords
    key: mariadb-root-password

  storage:
    volumeClaimTemplate:
      storageClassName: local-path
      resources:
        requests:
          storage: 18Gi
      accessModes:
      - ReadWriteOnce

  bootstrapFrom:
    volume:
      nfs:
        server: 192.168.1.3
        path: /backup/mariadb/bootstrap

  replicas: 3

  galera:
    enabled: true
    primary:
      podIndex: 0
      automaticFailover: true
    sst: mariabackup
    replicaThreads: 1
    config: 
      reuseStorageVolume: true
    agent:
      kubernetesAuth:
        enabled: true
      gracefulShutdownTimeout: 5s
    recovery:
      enabled: true
      minClusterSize: 1

  service:
    type: LoadBalancer
    metadata:
      labels:
        tailscale.com/proxy-class: "run-on-worker"
      annotations:
        io.cilium/lb-ipam-ips: 192.168.1.15
        tailscale.com/expose: 'true'
        tailscale.com/hostname: 'home-mariadb-galera'

  connection:
    secretName: mariadb-galera-conn
    secretTemplate:
      key: dsn

  affinity:
    antiAffinityEnabled: true
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist
          - key: kubernetes.io/arch
            operator: In
            values: 
            - 'amd64'

  tolerations:
    - key: "mariadb.mmontes.io/ha"
      operator: "Exists"
      effect: "NoSchedule"

  podDisruptionBudget:
    maxUnavailable: 66%

  updateStrategy:
    # type: RollingUpdate
    autoUpdateDataPlane: true

  # myCnf: |
  #   [mariadb]
  #   bind-address=*
  #   default_storage_engine=InnoDB
  #   binlog_format=row
  #   innodb_autoinc_lock_mode=2
  #   max_allowed_packet=256M

  #   ## Binary Logging
  #   ##
  #   log_bin=mysql-bin
  #   expire_logs_days=14
  #   # Disabling for performance per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql
  #   sync_binlog=0

  #   ## Replication to secondary server
  #   ##
  #   wsrep_gtid_mode      = on
  #   wsrep_gtid_domain_id = 0
  #   server-id            = 01
  #   log_slave_updates    = on
  #   gtid_domain_id       = 0


  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      memory: 1Gi

  metrics:
    enabled: true