# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: mediatools-service-account
#   namespace: media-tools


# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: mediatools-cluster-role
#   namespace: media-tools
# rules:
#   - apiGroups: ["*"]
#     resources: ["*"]
#     verbs: ["*"]


# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: mediatools-cluster-role-binding
# subjects:
# - namespace: media-tools
#   kind: ServiceAccount
#   name: mediatools-service-account 
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: mediatools-cluster-role


# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: mediatools-service-account-secret
#   namespace: media-tools
#   annotations:
#     kubernetes.io/service-account.name: "mediatools-service-account"
# type: kubernetes.io/service-account-token

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: god
  namespace: media-tools

---
apiVersion: v1
kind: Role
metadata:
  name: god-role
  namespace: media-tools
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: god-role-binding
  namespace: media-tools
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: god-role
subjects:
- kind: ServiceAccount
  name: god
  namespace: media-tools

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: god-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: god-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: god-role
subjects:
- kind: ServiceAccount
  name: god
  namespace: default