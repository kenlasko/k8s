---
apiVersion: apps/v1
kind: CronJob
metadata:
  name: recyclarr
  namespace: media-tools
  annotations:
    keel.sh/policy: force
    keel.sh/match-tag: "true"
    keel.sh/trigger: poll
spec:
  schedule: "@daily" 
  suspend: false
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      automountServiceAccountToken: false
      priorityClassName: medium-priority
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
              - key: kubernetes.io/arch
                operator: In
                values: 
                - 'amd64'
      containers:
      - name: recyclarr
        image: ghcr.io/recyclarr/recyclarr:latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 100
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop: ["ALL"]
        command:
        - "/app/recyclarr/recyclarr" 
        - "sync"
        env:
        - name: TZ
          value: "America/Toronto"
        resources:
          requests:
            cpu: 10m
            memory: 500Mi
          limits:
            cpu: 700m
            memory: 700Mi
        volumeMounts:
        - name: recyclarr-config
          mountPath: /config
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      volumes:
        - name: recyclarr-config
          persistentVolumeClaim:
            claimName: nfs-recyclarr