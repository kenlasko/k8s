---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: plex
  namespace: media-tools
  labels:
    app.kubernetes.io/name: plex
    app.kubernetes.io/part-of: plex
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: plex
      app.kubernetes.io/name: plex
      app.kubernetes.io/part-of: plex
  template:
    metadata:
      labels:
        app: plex
        name: plex
        app.kubernetes.io/name: plex
        app.kubernetes.io/part-of: plex
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  name: clusterplex-worker
              topologyKey: kubernetes.io/hostname
            weight: 50
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  name: plex
              topologyKey: kubernetes.io/hostname
            weight: 100
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: intel.feature.node.kubernetes.io/gpu
                operator: In
                values:
                - 'true'
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - nuc6                      
      volumes:
        - name: plex-config
          persistentVolumeClaim:
            claimName: longhorn-plex-config-pvc
        - name: media
          nfs:
            server: 192.168.1.3
            path: /mnt/md1/media
        # - name: transcode
        #   persistentVolumeClaim:
        #     claimName: clusterplex-transcode-pvc
      automountServiceAccountToken: false
      containers:
      - name: plex
        image: plexinc/pms-docker:plexpass     # ghcr.io/linuxserver/plex:latest  # plexinc/pms-docker:plexpass 
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 2Gi
            gpu.intel.com/i915: "1" 
          limits:
            gpu.intel.com/i915: "1" 
        startupProbe:
          httpGet:
            path: /identity
            scheme: HTTPS
            port: 32400
          failureThreshold: 45
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /identity
            port: 32400
          initialDelaySeconds: 15
          periodSeconds: 120
        ports:
          - name: pms-web
            containerPort: 32400
          - name: relay
            containerPort: 32499
        envFrom:
        - configMapRef:
            name: clusterplex-pms-config
        env:
        # - name: PLEX_CLAIM
        #   value: "***REMOVED***"
        - name: HOSTNAME
          value: plex.ucdialplans.com
        - name: ADVERTISE_IP
          value: "http://192.168.1.11:32400/"
        - name: PLEX_UID
          value: "1000"
        - name: PLEX_GID
          value: "1000"           
        - name: TZ
          value: "America/Toronto"
        volumeMounts:
        - name: plex-config
          mountPath: /config
        - name: media
          mountPath: /media
        # - name: transcode
        #   mountPath: /transcode  

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clusterplex-orchestrator
  namespace: media-tools
  labels:
    app.kubernetes.io/name: clusterplex-orchestrator
    app.kubernetes.io/part-of: plex
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: clusterplex-orchestrator
      app.kubernetes.io/part-of: plex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clusterplex-orchestrator
        app.kubernetes.io/part-of: plex
    spec:
      containers:
      - name: plex
        image: ghcr.io/pabloromeo/clusterplex_orchestrator:latest
        startupProbe:
          httpGet:
            path: /health
            port: 3500
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3500
          initialDelaySeconds: 5
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 3500
          initialDelaySeconds: 5
          timeoutSeconds: 10
        ports:
          - name: orchestrator
            containerPort: 3500
        envFrom:
        - configMapRef:
            name: clusterplex-orchestrator-config
        resources:            # adapt requests and limits to your needs
          requests:
            cpu: 200m
            memory: 32Mi
          limits:
            cpu: 500m
            memory: 64Mi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clusterplex-worker
  namespace: media-tools
  labels:
    app.kubernetes.io/name: clusterplex-worker
    app.kubernetes.io/part-of: plex
spec:
  serviceName: clusterplex-worker-service
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: clusterplex-worker
      app.kubernetes.io/part-of: plex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clusterplex-worker
        app.kubernetes.io/part-of: plex
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: intel.feature.node.kubernetes.io/gpu
                operator: In
                values:
                - 'true'
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  name: clusterplex-worker
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  name: plex
              topologyKey: kubernetes.io/hostname
            weight: 50
      containers:
      - name: plex-worker
        image: ghcr.io/pabloromeo/clusterplex_worker:latest  # lscr.io/linuxserver/plex:latest
        startupProbe:
          httpGet:
            path: /health
            port: 3501
          failureThreshold: 40
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3501
          initialDelaySeconds: 60
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 3501
          initialDelaySeconds: 10
          timeoutSeconds: 10
        ports:
          - name: worker
            containerPort: 3501
        envFrom:
        - configMapRef:
            name: clusterplex-worker-config
        volumeMounts:
        - name: data
          mountPath: /data
        - name: codecs
          mountPath: /codecs
        - name: transcode
          mountPath: /transcode
        resources:              # adapt requests and limits to your needs
          requests:
            cpu: 500m
            memory: 200Mi
            gpu.intel.com/i915: "1" 
          limits:
            cpu: 3000m
            memory: 800Mi
            gpu.intel.com/i915: "1"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: pvc-smb-mediapc-toplevel
      - name: transcode
        persistentVolumeClaim:
          claimName: clusterplex-transcode-pvc
  volumeClaimTemplates:
    - metadata:
        name: codecs
        labels:
          app.kubernetes.io/name: clusterplex-codecs-pvc
          app.kubernetes.io/part-of: plex
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        # specify your storage class
        storageClassName: longhorn