---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: donetick
  namespace: homeassist
  annotations:
    keel.sh/policy: force
    keel.sh/match-tag: "true"
    keel.sh/trigger: poll
spec:
  serviceName: donetick
  replicas: 1
  revisionHistoryLimit: 2
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: donetick
  template:
    metadata:
      labels:
        app: donetick
        name: donetick
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      automountServiceAccountToken: false
      priorityClassName: low-priority
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
              - key: kubernetes.io/arch
                operator: In
                values: 
                - 'amd64'
      containers:
      - name: donetick
        image: donetick/donetick:latest
        imagePullPolicy: Always
        # securityContext:
        #   allowPrivilegeEscalation: false
        #   readOnlyRootFilesystem: false
        #   seccompProfile:
        #     type: RuntimeDefault
        #   capabilities:
        #     drop: ["ALL"]
        #     add:
        #     - "CHOWN"
        #     - "SETGID"
        #     - "SETUID"
        #     - "DAC_OVERRIDE"
        env:
        - name: PUID
          value: '1000'
        - name: PGID
          value: '100'
        - name: TZ
          value: "America/Toronto"
        resources:
          requests:
            cpu: 40m
            memory: 200Mi
          limits:
            cpu: 600m
            memory: 300Mi
        livenessProbe:
          httpGet:
            path: /
            port: 2021
          initialDelaySeconds: 15
          periodSeconds: 60
          timeoutSeconds: 5
        volumeMounts:
        - name: data
          mountPath: /usr/src/app/data
        - name: config
          mountPath: /config
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: longhorn-donetick-pvc
      - name: config
        persistentVolumeClaim:
          claimName: nfs-donetick