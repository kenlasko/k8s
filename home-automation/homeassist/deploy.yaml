---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: homeassist
  namespace: homeassist
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/match-tag: "true"
spec:
  serviceName: homeassist
  replicas: 1
  revisionHistoryLimit: 2
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: homeassist
  template:
    metadata:
      labels:
        app: homeassist
        name: homeassist
        mariadb-client: "true"
    spec:
      restartPolicy: Always
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: ha-sa-garminupload
      priorityClassName: high-priority
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - nuc4
      containers:
      - name: homeassist
        image: ghcr.io/home-assistant/home-assistant:2025.1.3
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop: ["ALL"]
        resources:
          requests:
            cpu: 100m
            memory: 700Mi
            smarter-devices/ttyUSB1: 1
          limits:
            # cpu: 1400m
            memory: 1200Mi
            smarter-devices/ttyUSB1: 1
        ports:
        - containerPort: 8123
          name: http
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 5
        env:
        - name: PYTHONPATH
          value: "/config/deps/"
        - name: TZ
          value: "America/Toronto"
        envFrom:
        - secretRef:
            name: kube-auth-token
        volumeMounts:
        - name: homeassist
          mountPath: /config
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      volumes:
      - name: homeassist
        persistentVolumeClaim:
          claimName: nfs-homeassist
