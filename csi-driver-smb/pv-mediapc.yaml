apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: smb.csi.k8s.io
  name: pv-smb-mediapc-data
spec:
  capacity:
    storage: 1Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
  csi:
    driver: smb.csi.k8s.io
    readOnly: false
    # volumeHandle format: {smb-server-address}#{sub-dir-name}#{share-name}
    # make sure this value is unique for every share in the cluster
    volumeHandle: mediapc-data
    volumeAttributes:
      source: "//192.168.1.5/data"
    nodeStageSecretRef:
      name: mediapc-smb-access
      namespace: media-tools

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-smb-mediapc-data
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Ti
  volumeName: pv-smb-mediapc-data
  storageClassName: ""



---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: smb.csi.k8s.io
  name: pv-smb-mediapc-movies
spec:
  capacity:
    storage: 10Ti
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
  csi:
    driver: smb.csi.k8s.io
    readOnly: false
    # volumeHandle format: {smb-server-address}#{sub-dir-name}#{share-name}
    # make sure this value is unique for every share in the cluster
    volumeHandle: mediapc-movies
    volumeAttributes:
      source: "//192.168.1.5/movies"
    nodeStageSecretRef:
      name: mediapc-smb-access
      namespace: media-tools

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-smb-mediapc-movies
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Ti
  volumeName: pv-smb-mediapc-movies
  storageClassName: ""